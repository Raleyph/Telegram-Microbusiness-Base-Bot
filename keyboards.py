from aiogram import types
from aiogram.utils.keyboard import ReplyKeyboardBuilder, InlineKeyboardBuilder


def get_main_keyboard():
    kb = ReplyKeyboardBuilder()
    kb.add(types.KeyboardButton(text="–ö–ª–∏–µ–Ω—Ç—ã üôé‚Äç‚ôÄ"))
    kb.add(types.KeyboardButton(text="–ó–∞–ø–∏—Å–∏ üìÉ"))
    kb.add(types.KeyboardButton(text="–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ üìä"))
    kb.adjust(3)
    return kb.as_markup(resize_keyboard=True, input_field_placeholder="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")


def get_clients_keyboard():
    kb = ReplyKeyboardBuilder()
    kb.add(types.KeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞"))
    kb.add(types.KeyboardButton(text="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–ª–∏–µ–Ω—Ç–∞"))
    kb.add(types.KeyboardButton(text="–°–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤"))
    kb.add(types.KeyboardButton(text="–ù–∞–∑–∞–¥"))
    kb.adjust(3)
    return kb.as_markup(resize_keyboard=True, input_field_placeholder="–ú–µ–Ω—é –∫–ª–∏–µ–Ω—Ç–æ–≤")


def get_records_keyboard():
    kb = ReplyKeyboardBuilder()
    kb.add(types.KeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å"))
    kb.add(types.KeyboardButton(text="–£–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å"))
    kb.add(types.KeyboardButton(text="–¢–µ–∫—É—â–∏–µ –∑–∞–ø–∏—Å–∏"))
    kb.add(types.KeyboardButton(text="–ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–ø–∏—Å—å"))
    kb.add(types.KeyboardButton(text="–ù–∞–∑–∞–¥"))
    kb.adjust(3)
    return kb.as_markup(resize_keyboard=True, input_field_placeholder="–ú–µ–Ω—é –∑–∞–ø–∏—Å–µ–π")


def get_analytics_keyboard():
    kb = ReplyKeyboardBuilder()
    kb.add(types.KeyboardButton(text="–ì—Ä–∞—Ñ–∏–∫ –¥–æ—Ö–æ–¥–æ–≤ üí∂"))
    kb.add(types.KeyboardButton(text="–ì—Ä–∞—Ñ–∏–∫ –≤—Ä–µ–º–µ–Ω–∏ ‚è≥"))
    kb.add(types.KeyboardButton(text="–û–±—â–∏–µ –¥–∞–Ω–Ω—ã–µ üóÑ"))
    kb.add(types.KeyboardButton(text="–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏ ‚úÖ"))
    kb.add(types.KeyboardButton(text="–ù–∞–∑–∞–¥"))
    kb.adjust(3)
    return kb.as_markup(resize_keyboard=True, input_field_placeholder="–ú–µ–Ω—é –∞–Ω–∞–ª–∏—Ç–∏–∫–∏")


def get_time_period_keyboard():
    kb = ReplyKeyboardBuilder()
    kb.add(types.KeyboardButton(text="–ó–∞ –Ω–µ–¥–µ–ª—é"))
    kb.add(types.KeyboardButton(text="–ó–∞ –º–µ—Å—è—Ü"))
    kb.add(types.KeyboardButton(text="–ó–∞ –≤—Å–µ –≤—Ä–µ–º—è"))
    kb.add(types.KeyboardButton(text="–ù–∞–∑–∞–¥"))
    kb.adjust(3)
    return kb.as_markup(resize_keyboard=True, input_field_placeholder="–ú–µ–Ω—é –∞–Ω–∞–ª–∏—Ç–∏–∫–∏")


def get_general_data_keyboard():
    kb = ReplyKeyboardBuilder()
    kb.add(types.KeyboardButton(text="–î–æ—Ö–æ–¥—ã üí∞"))
    kb.add(types.KeyboardButton(text="–†–∞—Å—Ö–æ–¥—ã üí∏"))
    kb.add(types.KeyboardButton(text="–†–µ–Ω—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—å üìà"))
    kb.add(types.KeyboardButton(text="–ù–∞–∑–∞–¥"))
    kb.adjust(3)
    return kb.as_markup(resize_keyboard=True, input_field_placeholder="–ú–µ–Ω—é –∞–Ω–∞–ª–∏—Ç–∏–∫–∏")


def get_expenses_keyboard():
    kb = ReplyKeyboardBuilder()
    kb.add(types.KeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å—Ö–æ–¥"))
    kb.add(types.KeyboardButton(text="–£–¥–∞–ª–∏—Ç—å —Ä–∞—Å—Ö–æ–¥"))
    kb.add(types.KeyboardButton(text="–°–ø–∏—Å–æ–∫ —Ä–∞—Å—Ö–æ–¥–æ–≤"))
    kb.add(types.KeyboardButton(text="–ù–∞–∑–∞–¥"))
    kb.adjust(3)
    return kb.as_markup(resize_keyboard=True, input_field_placeholder="–ú–µ–Ω—é –∞–Ω–∞–ª–∏—Ç–∏–∫–∏")


def get_skip_button():
    kb = ReplyKeyboardBuilder()
    kb.add(types.KeyboardButton(text="–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"))
    return kb.as_markup(resize_keyboard=True)


def get_confirm_keyboard():
    kb = InlineKeyboardBuilder()
    kb.add(types.InlineKeyboardButton(text="–î–∞ ‚úÖ", callback_data="yes"))
    kb.add(types.InlineKeyboardButton(text="–ù–µ—Ç ‚ùå", callback_data="no"))
    return kb.as_markup(row_width=2)


def get_expenses_type_keyboard():
    kb = InlineKeyboardBuilder()
    kb.add(types.InlineKeyboardButton(text="–ú–∞—Ç–µ—Ä–∏–∞–ª üß±", callback_data="material"))
    kb.add(types.InlineKeyboardButton(text="–ó–∞—Ä–ø–ª–∞—Ç–∞ üí≥", callback_data="salary"))
    kb.add(types.InlineKeyboardButton(text="–ü–µ—Ä–µ–≤–æ–∑–∫–∞ üöõ", callback_data="transportation"))
    kb.add(types.InlineKeyboardButton(text="–ù–∞–ª–æ–≥ ‚öñ", callback_data="tax"))
    return kb.as_markup(row_width=1)


def get_clients_choose_keyboard(data):
    kb = InlineKeyboardBuilder()
    for i in data:
        kb.row(types.InlineKeyboardButton(text=f"{i[1]} {'' if i[3] is None else str(i[3])}", callback_data=i[0]))
    return kb.as_markup(row_width=1)


def get_current_records_choose_keyboard(data):
    kb = InlineKeyboardBuilder()
    for i in data:
        kb.row(types.InlineKeyboardButton(text=f"{i[1]} {i[2]}", callback_data=i[0]))
    return kb.as_markup(row_width=1)


def get_expenses_for_remove_keyboard(data):
    kb = InlineKeyboardBuilder()
    for i in data:
        kb.row(types.InlineKeyboardButton(text=f"{i[3]} {i[4] if i[1] == '–ú–∞—Ç–µ—Ä–∏–∞–ª' else i[8]}", callback_data=i[0]))
    return kb.as_markup(row_width=1)
