from aiogram import Router
from aiogram import types
from aiogram.filters import Text
from aiogram.filters.command import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State

import database as db
import config as cfg
import keyboards as kb

router = Router()


class MenuStates(StatesGroup):
    menu = State()
    general_data_menu = State()
    expenses_menu = State()
    set_time_period = State()


# commands
@router.message(Command(commands=["start"]))
async def start_bot(message: types.Message, state: FSMContext):
    await state.clear()

    if message.chat.id in cfg.whitelist:
        if not db.user_check(message.chat.id):
            us_id = message.from_user.id
            us_name = message.from_user.first_name
            username = message.from_user.username

            db.user_login(user_id=us_id, user_name=us_name, username=username)

        await message.answer(cfg.start_message, reply_markup=kb.get_main_keyboard(), parse_mode='html', disable_web_page_preview=True)
        db.check_dirs()


@router.message(Command(commands=["cancel"]))
async def cancel(message: types.Message, state: FSMContext):
    await state.clear()
    await message.answer("–û—Ç–º–µ–Ω–∞!", reply_markup=kb.get_main_keyboard())


# client menu
@router.message(Text(text="–ö–ª–∏–µ–Ω—Ç—ã üôé‚Äç‚ôÄ"))
async def open_clients_menu(message: types.Message, state: FSMContext):
    await message.answer("–ú–µ–Ω—é –∫–ª–∏–µ–Ω—Ç–æ–≤", reply_markup=kb.get_clients_keyboard())
    await state.set_state(MenuStates.menu)


# records menu
@router.message(Text(text="–ó–∞–ø–∏—Å–∏ üìÉ"))
async def open_records_menu(message: types.Message, state: FSMContext):
    await message.answer("–ú–µ–Ω—é –∑–∞–ø–∏—Å–µ–π", reply_markup=kb.get_records_keyboard())
    await state.set_state(MenuStates.menu)


# analytics menu
@router.message(Text(text="–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ üìä"))
async def open_records_menu(message: types.Message, state: FSMContext):
    await message.answer("–ú–µ–Ω—é –∞–Ω–∞–ª–∏—Ç–∏–∫–∏", reply_markup=kb.get_analytics_keyboard())
    await state.set_state(MenuStates.menu)


@router.message(Text(text="–ù–∞–∑–∞–¥"), MenuStates.menu)
async def back_to_main_menu(message: types.Message, state: FSMContext):
    await message.answer("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=kb.get_main_keyboard())
    await state.clear()


# get data
@router.message(Text(text="–ì—Ä–∞—Ñ–∏–∫ –¥–æ—Ö–æ–¥–æ–≤ üí∂"))
async def get_finance_schedule(message: types.Message, state: FSMContext):
    await state.update_data(action=message.text)
    await state.set_state(MenuStates.set_time_period)
    await message.answer("–í—ã–±–µ—Ä–µ—Ç–µ –ø–µ—Ä–∏–æ–¥ –≤—Ä–µ–º–µ–Ω–∏", reply_markup=kb.get_time_period_keyboard())


@router.message(Text(text="–ì—Ä–∞—Ñ–∏–∫ –≤—Ä–µ–º–µ–Ω–∏ ‚è≥"))
async def get_time_schedule(message: types.Message, state: FSMContext):
    await state.update_data(action=message.text)
    await state.set_state(MenuStates.set_time_period)
    await message.answer("–í—ã–±–µ—Ä–µ—Ç–µ –ø–µ—Ä–∏–æ–¥ –≤—Ä–µ–º–µ–Ω–∏", reply_markup=kb.get_time_period_keyboard())


@router.message(Text(text="–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏ ‚úÖ"))
async def get_complete_records(message: types.Message, state: FSMContext):
    await state.update_data(action=message.text)
    await state.set_state(MenuStates.set_time_period)
    await message.answer("–í—ã–±–µ—Ä–µ—Ç–µ –ø–µ—Ä–∏–æ–¥ –≤—Ä–µ–º–µ–Ω–∏", reply_markup=kb.get_time_period_keyboard())


@router.message(Text(text="–ù–∞–∑–∞–¥"), MenuStates.set_time_period)
async def back_to_analytics_menu(message: types.Message, state: FSMContext):
    await message.answer("–ú–µ–Ω—é –∞–Ω–∞–ª–∏—Ç–∏–∫–∏", reply_markup=kb.get_analytics_keyboard())
    await state.set_state(MenuStates.menu)


# general data
@router.message(Text(text="–û–±—â–∏–µ –¥–∞–Ω–Ω—ã–µ üóÑ"))
async def open_general_data_menu(message: types.Message, state: FSMContext):
    await state.set_state(MenuStates.general_data_menu)
    await message.answer("–ú–µ–Ω—é –æ–±—â–∏—Ö —Å–≤–µ–¥–µ–Ω–∏–π –æ –¥–æ—Ö–æ–¥–∞—Ö –∏ —Ä–∞—Å—Ö–æ–¥–∞—Ö", reply_markup=kb.get_general_data_keyboard())


@router.message(Text(text="–ù–∞–∑–∞–¥"), MenuStates.general_data_menu)
async def back_to_analytics_menu(message: types.Message, state: FSMContext):
    await message.answer("–ú–µ–Ω—é –∞–Ω–∞–ª–∏—Ç–∏–∫–∏", reply_markup=kb.get_analytics_keyboard())
    await state.set_state(MenuStates.menu)


# expenses
@router.message(Text(text="–†–∞—Å—Ö–æ–¥—ã üí∏"))
async def open_expenses_menu(message: types.Message, state: FSMContext):
    await state.set_state(MenuStates.expenses_menu)
    await message.answer("–ú–µ–Ω—é —Ä–∞—Å—Ö–æ–¥–æ–≤", reply_markup=kb.get_expenses_keyboard())


@router.message(Text(text="–ù–∞–∑–∞–¥"), MenuStates.expenses_menu)
async def back_to_general_data_menu(message: types.Message, state: FSMContext):
    await message.answer("–ú–µ–Ω—é –æ–±—â–∏—Ö —Å–≤–µ–¥–µ–Ω–∏–π –æ –¥–æ—Ö–æ–¥–∞—Ö –∏ —Ä–∞—Å—Ö–æ–¥–∞—Ö", reply_markup=kb.get_general_data_keyboard())
    await state.set_state(MenuStates.menu)
