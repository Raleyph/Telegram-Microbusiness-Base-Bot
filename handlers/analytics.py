from aiogram import Router
from aiogram import types
from aiogram.filters import Text
from aiogram.fsm.context import FSMContext

import database as db
import keyboards as kb
import graphic_representation as gp

router = Router()


@router.message(Text(text="–ó–∞ –Ω–µ–¥–µ–ª—é"))
async def get_week_data(message: types.Message, state: FSMContext):
    state_data = await state.get_data()

    if db.get_records_all_data():
        if state_data['action'] == "–ì—Ä–∞—Ñ–∏–∫ –¥–æ—Ö–æ–¥–æ–≤ üí∂":
            image = types.FSInputFile(gp.get_data_schedule(7, 6, "–ì—Ä–∞—Ñ–∏–∫ –∑–∞—Ä–∞–±–æ—Ç–∫–∞ –∑–∞ –Ω–µ–¥–µ–ª—é"))
            await message.answer_photo(image, reply_markup=kb.get_main_keyboard())
        elif state_data['action'] == "–ì—Ä–∞—Ñ–∏–∫ –≤—Ä–µ–º–µ–Ω–∏ ‚è≥":
            image = types.FSInputFile(gp.get_data_schedule(7, 9, "–ì—Ä–∞—Ñ–∏–∫ –≤—Ä–µ–º–µ–Ω–∏ –∑–∞ –Ω–µ–¥–µ–ª—é"))
            await message.answer_photo(image, reply_markup=kb.get_main_keyboard())
        elif state_data['action'] == "–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏ ‚úÖ":
            image = types.FSInputFile(gp.get_completed_records_dataframe(7))
            await message.answer_photo(image, reply_markup=kb.get_main_keyboard())

    await state.clear()


@router.message(Text(text="–ó–∞ –º–µ—Å—è—Ü"))
async def get_month_data(message: types.Message, state: FSMContext):
    state_data = await state.get_data()

    if db.get_records_all_data():
        if state_data['action'] == "–ì—Ä–∞—Ñ–∏–∫ –¥–æ—Ö–æ–¥–æ–≤ üí∂":
            image = types.FSInputFile(gp.get_data_schedule(31, 6, "–ì—Ä–∞—Ñ–∏–∫ –∑–∞—Ä–∞–±–æ—Ç–∫–∞ –∑–∞ –º–µ—Å—è—Ü"))
            await message.answer_photo(image, reply_markup=kb.get_main_keyboard())
        elif state_data['action'] == "–ì—Ä–∞—Ñ–∏–∫ –≤—Ä–µ–º–µ–Ω–∏ ‚è≥":
            image = types.FSInputFile(gp.get_data_schedule(31, 9, "–ì—Ä–∞—Ñ–∏–∫ –≤—Ä–µ–º–µ–Ω–∏ –∑–∞ –º–µ—Å—è—Ü"))
            await message.answer_photo(image, reply_markup=kb.get_main_keyboard())
        elif state_data['action'] == "–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏ ‚úÖ":
            image = types.FSInputFile(gp.get_completed_records_dataframe(31))
            await message.answer_photo(image, reply_markup=kb.get_main_keyboard())

    await state.clear()


@router.message(Text(text="–ó–∞ –≤—Å–µ –≤—Ä–µ–º—è"))
async def get_month_data(message: types.Message, state: FSMContext):
    state_data = await state.get_data()

    if db.get_records_all_data():
        if state_data['action'] == "–ì—Ä–∞—Ñ–∏–∫ –¥–æ—Ö–æ–¥–æ–≤ üí∂":
            image = types.FSInputFile(gp.get_alltime_data_schedule(6, "–ì—Ä–∞—Ñ–∏–∫ –∑–∞—Ä–∞–±–æ—Ç–∫–∞ –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è"))
            await message.answer_photo(image, reply_markup=kb.get_main_keyboard())
        elif state_data['action'] == "–ì—Ä–∞—Ñ–∏–∫ –≤—Ä–µ–º–µ–Ω–∏ ‚è≥":
            image = types.FSInputFile(gp.get_alltime_data_schedule(9, "–ì—Ä–∞—Ñ–∏–∫ –≤—Ä–µ–º–µ–Ω–∏ –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è"))
            await message.answer_photo(image, reply_markup=kb.get_main_keyboard())
        elif state_data['action'] == "–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏ ‚úÖ":
            if gp.get_all_records_dataframe():
                document = types.FSInputFile("db/csv/all_records.xlsx")
                await message.answer_document(document, reply_markup=kb.get_main_keyboard())
            else:
                await message.answer("–û—à–∏–±–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏!", reply_markup=kb.get_main_keyboard())

    await state.clear()
